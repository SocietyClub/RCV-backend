/*
 * Ranked Choice Voting API
 *
 * This is the API for Creating, Managing and Fetching Polls and Votes for the RCV Project.
 *
 * API version: 1.0.0
 * Contact: test@test.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// VotesApiService is a service that implents the logic for the VotesApiServicer
// This service should implement the business logic for every endpoint for the VotesApi API. 
// Include any external packages or services that will be required by this service.
type VotesApiService struct {
}

// NewVotesApiService creates a default api service
func NewVotesApiService() VotesApiServicer {
	return &VotesApiService{}
}

// PollPollIDVotePost - Cast a vote for a specific Poll
func (s *VotesApiService) PollPollIDVotePost(ctx context.Context, pollID int32, voteInput VoteInput) (ImplResponse, error) {
	// TODO - update PollPollIDVotePost with the required logic for this service method.
	// Add api_votes_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Poll{}) or use other options such as http.Ok ...
	//return Response(200, Poll{}), nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(401, UnauthorizedError{}) or use other options such as http.Ok ...
	//return Response(401, UnauthorizedError{}), nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("PollPollIDVotePost method not implemented")
}

